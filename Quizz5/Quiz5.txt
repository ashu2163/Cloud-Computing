
Name: Ashutosh Mehta
Last 4 digits ID: 9115

CSE 6331, Cloud Computing					

Quiz Q5, 3.30, Summer 2020   (c) DL, UTA, 2020


  C&P means cut and paste only those relevant lines from your program(s) into this quiz.


 1.  I understand that I am on my honor during this quiz, I will not collaborate, use 
     non-allowed sources, and I will not discuss or share this quiz with anyone for the next 
     12 hours.
     You MAY: use Google to search, use previous source code, 
     YOU MAY NOT use:
     Email, Facebook, Hangouts, IM, chats, Skype or ANY other human connection.

     ANY VIOLATIONS to scholastic honesty, which include working with others during this quiz, communicating with others during
     this quiz, giving anyone or recieving from anyone any information during this quiz or for the next 6 hours after completion
     of this quiz is a honors violation and will result in a -100 points being assessed for this quiz and being reported. 

     This is a timed test. Late tests will have points deducted for being late.
     Very late tests will not be graded.

     When you are complete, with any part, please send the link, raise your hand, so we may visually inspect that part.

     The second part of the test, you should electronically submit, you will need to copy and paste 
     only those lines of code to implement that part of the test, usually a few (two to eight) lines of code. 
     Place it immediately after the question.

     Submit this Quiz (renamed) with code cut and pasted, ONLY text. DO NOT submit zips, binaries, libraries,
     or anything other than text.

     When any parts(questions) are complete complete, submit this test, you may make multiple submissions.

     If you have computer, or other, problems, please raise your hand immediately.

     If you understand and agree, please initial here:
     ________AM_________

 2. Get files from this same folder.
   
 3. Name your program/submission with your name and last digits of your ID.

 4a. Using the cloud services provider, all functionality possible should be implemented on that provider.
     (Of course, displaying web pages through a browser and the user interface is "local")

 4b. Upload all data files (not this quiz) to cloud service. 
  
Show and submit code, when each part is complete, raise your hand and then show us:

 To recieve credit you MUST show (demo) AND submit the code (text only) on Canvas.

  5. Show a web page and interface (which resides on the cloud provider) with your name,
     and below that, Student ID at the top of every web page dispayed 
     (for this quiz). 
     Please use a large font.
    
     The cloud service providers are Microsoft Azure or Amazon AWS. You may use either as you wish.

  6. Documents l.txt and h.txt are written by the same person. But they were about very different subjects,
     and are different lengths. Still, one way to compare is the frequency usage (percent, fraction) of each word, 
     that is, of the total count of all words in the document, what fraction are word "X" (what percent)?
     (For every word in each document, what fraction of THAT document is each word.) 
     Show the N most frequent words (percent), where we will give you N on a web form, for each document.
     (Remember to change letter cases and remove punctuation, they are not part of words.)
    n=int(request.form['n'])
    text = re.findall('\w+', open('l.txt', encoding="utf8").read().lower()) 
    for i in text:
        text.remove(i)
    d=Counter(text).most_common(n)

    text1 = re.findall('\w+', open('h.txt', encoding="utf8").read().lower()) 
    d1=Counter(text1).most_common(n)

    return render_template('q6.html',d=d,d1=d1)



  7. Take the list of stopwords given, and remove all those stopwords from both texts. 
     Show the total number of words removed from each, then show the remaining texts, 
     then repeat the previous question.

n=int(request.form['n'])
    text = re.findall('\w+', open('stopwords.txt', encoding="utf8").read().lower())
    
    text1 = re.findall('\w+', open('l.txt', encoding="utf8").read().lower())
    text2 = re.findall('\w+', open('h.txt', encoding="utf8").read().lower())
    count1=0
    count2=0
    for i in text:
        if i in text1:
            count1=count1+1
        if i in text2:
            count2=count2+1

    text1=open('l.txt','r')
    line=text1.readlines()

    result1 = ""
    for l in line:
        for w in text:
            l.replace(w, "")
        result1 += l

    text2=open('h.txt', encoding="utf8")
    line=text2.readlines()
    result2 = ""
    for l in line:
        for w in text:
            l.replace(w, "")
        result2 += l
    
    text1 = re.findall('\w+', open('l.txt', encoding="utf8").read().lower()) 
    for i in text1:
        if i in text1:
            text1.remove(i)
    d=Counter(text1).most_common(n)

    text2 = re.findall('\w+', open('h.txt', encoding="utf8").read().lower()) 
    for i in text:
        if i in text2:
            text2.remove(i)
    d2=Counter(text2).most_common(n)

    #print(d1)
    return render_template('q7.html',c1=count1,c2=count2, r1= result1, r2=result2, d=d,d2=d2)

<form action="/removeWord" method="POST">
  <h3>Max Freq</h3>
Enter freq:
<input type="number" name="n">
<button type="submit" name="submit">Find</button>
</form>

{% if c1 %}
Count of removed words from l.txt: {{ c1 }}
{% endif %}
<br>
<br>
{% if c2 %}
Count of removed words from h.txt: {{ c2 }}
{% endif %}
<br>
<br>
{% if r1 %}
<b>Text of l.txt:</b> {{ r1 }}
{% endif %}
<br>
<br>
{% if r2 %}
<b>Text of h.txt: </b>{{ r2 }}
{% endif %}
<br>
{% if d %}
{{ d }}
{% endif %}
<br>
{% if d2 %}
{{ d2 }}
{% endif %}


  8. On a web page allow a user to give two words, for example "public health", which is a bigram.
     Using the orginal texts (but still dealing with case, punctuation),
     Find all occurances of the given two words (bigram) where they are adjacent, with no words between them.
     Please list all sentences that contain those bigrams. 
@application.route('/findbigram', methods=['GET', 'POST'])
def findbigram():
    word1=(request.form['w1'])
    word2=(request.form['w2'])
    
    text = re.findall('\w+', open('l.txt', encoding="utf8").read().lower())
    bi=Counter(zip(text, text[1:]))
    s=""
    
    for i in bi:
        if i[0]==word1 and i[1]==word2:
            s=i[0]+" "+i[1]
            print(s)
            a=bi[i]

    text = re.findall('\w+', open('h.txt', encoding="utf8").read().lower())
    bi=Counter(zip(text, text[1:]))
    s1=""
    
    b=0
    for i in bi:
        if i[0]==word1 and i[1]==word2:
            s1=i[0]+" "+i[1]
            b=bi[i]

    return render_template('q8.html',ans=s,a=a,ans1=s1,b=b)

<form action="/findbigram" method="POST">
    <h3>Word</h3>
  Enter Word1:
  <input type="text" name="w1">
  Enter Word2:
  <input type="text" name="w2">
  <button type="submit" name="submit">Find</button>
</form>

<br>
{% if ans %}
<b>From l.txt: </b> {{ ans }} : {{ a }}
{% endif %}
<br>
<br>
{% if ans1 %}
<b>From h.txt: </b>{{ ans1 }}: {{ b }}
{% endif %}
     


  9. Following the previous question, then allow us to replace those two words with two other words, 
     which we give you on that web form. Then show the resulting text.
 
 10. Show us, in a link, the application running and we will try it out. Only for parts 6, 7, 8, 9

 11. When complete, return (send) this quiz
     If you finish early, send this immediately, otherwise send between
     the end of class and no more than 1 minute after that.

